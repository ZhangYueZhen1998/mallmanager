RESTful  是一套接口设计规范
用不同的请求类型发送同样一个请求表示 所对应的处理是不同的
通过Http请求的不同类型(POST/GET/PUT/DELETE)来判断是什么业务操作(CRUD)
json-server 应用了RESTful规范

HTTP方法
POST    create  新增一个没有id的资源
GET     read    取得一个资源
PUT     Update  更新一个资源，如果资源不存在就新增一个含id资源
DELETE  delete  删除一个资源

这个是json字符串
{
    "brands": [{
            "name": "TCL",
            "data": "2018-05-30",
            "id": 1
        },
        {
            "name": "Apple",
            "data": "2018-06-01",
            "id": 2
        }, {
            "name": "haha",
            "data": "2017-08-55",
            "id": 3
        }, {
            "name": "BM",
            "data": "2019-7-30",
            "id": 4
        }
    ]
}
 
GET /brands      就是返回 brands 里面所有的数据
GET /brands/1    就是返回 brands 里面id为1的数据

/brands?name_like=关键字  模糊查询  就是返回brands  json里面的name属性的value中有关键字的数据
例：/brands?name_like=A


POST /brands     查询brands数据

 // get 查询数据
    // axios.get("http://localhost:3000/brands").then(res => {
    //     const {
    //         status,
    //         data
    //     } = res;
    //     if (status == 200) {
    //         console.log(data);
    //     }
    // }).catch(err => {
    //     console.log(err);
    // })



PUT /brands/1    修改brands 里面id为1的数据

 //    put为修改数据  http://localhost:3000/brands/5  后面的5位要修改id为5的数据
    // axios.put("http://localhost:3000/brands/5", {
    //     name: "我被修改了",
    //     data: new Date()
    // }).then(res => {
    //     console.log(res.status);
    // })




DELETE/brands/1 删除brands 里面id为1的数据

 // axios.delete("http://localhost:3000/brands/4").then(res => {
    //     console.log(res.status);
    // })


POST    create  新增一个没有id的资源

// 会jsonp会自动生成id   post添加数据
    axios.post("http://localhost:3000/brands", {
        name: "b嗯嗯",
        data: new Date()
    }).then(res => {
        console.log(res.status);
    })





